# Users

User object
{
  "id": integer,
  "username": string,
  "email": string,
  "created_at": datetime(iso 8601),
  "updated_at": datetime(iso 8601)
}

GET /users
Returns all users in the system.

**URL Params**
None

**Data Params**
None

**Headers**
Content-Type: application/json

**Success Response:**
```json
{
  "users": [
           {<user_object>},
           {<user_object>},
           {<user_object>}
         ]
}
```

GET /users/:id
Returns the specified user.

**URL Params**
Required: id=[integer]

**Data Params**
None

**Headers**
Content-Type: application/json
Authorization: Bearer <OAuth Token>

**Success Response:**
```json
{ <user_object> }
```

**Error Response:**
```json
{
  "error": "User doesn't exist"
}
```
OR
```json
{
  "error": "You are unauthorized to make this request."
}
```

GET /users/:id/orders
Returns all Orders associated with the specified user.

**URL Params**
Required: id=[integer]

**Data Params**
None

**Headers**
Content-Type: application/json
Authorization: Bearer <OAuth Token>

**Success Response:**
```json
{
  "orders": [
           {<order_object>},
           {<order_object>},
           {<order_object>}
         ]
}
```

**Error Response:**
```json
{
  "error": "User doesn't exist"
}
```
OR
```json
{
  "error": "You are unauthorized to make this request."
}
```

POST /users
Creates a new User and returns the new object.

**URL Params**
None

**Headers**
Content-Type: application/json

**Data Params**
```json
{
  "username": string,
  "email": string
}
```

**Success Response:**
```json
{ <user_object> }
```

PATCH /users/:id
Updates fields on the specified user and returns the updated object.

**URL Params**
Required: id=[integer]

**Data Params**
```json
{
  "username": string,
  "email": string
}
```

**Headers**
Content-Type: application/json
Authorization: Bearer <OAuth Token>

**Success Response:**
```json
{ <user_object> }
```

**Error Response:**
```json
{
  "error": "User doesn't exist"
}
```
OR
```json
{
  "error": "You are unauthorized to make this request."
}
```

DELETE /users/:id
Deletes the specified user.

**URL Params**
Required: id=[integer]

**Data Params**
None

**Headers**
Content-Type: application/json
Authorization: Bearer <OAuth Token>

**Success Response:**
Code: 204

**Error Response:**
```json
{
  "error": "User doesn't exist"
}
```
OR
```json
{
  "error": "You are unauthorized to make this request."
}
